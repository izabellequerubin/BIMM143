---
title: "Class 09"
author: "Izabelle Querubin"
format: pdf
---

## 1. Introduction to the RCSB Protein Data Bank (PDB)

```{r}
pdb_data <- read.csv("MolecType.csv", header = TRUE, stringsAsFactors = FALSE, row.names = 1)
pdb_data$X.ray <- gsub(",", "", pdb_data$X.ray)
pdb_data$EM <- gsub(",", "", pdb_data$EM)
pdb_data$NMR <- gsub(",", "", pdb_data$NMR)
pdb_data$Total <- gsub(",", "", pdb_data$Total)
head(pdb_data)
```

**Q1:** What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy?

```{r}
pdb_data$X.ray <- as.integer(pdb_data$X.ray)
pdb_data$EM <- as.integer(pdb_data$EM)
pdb_data$NMR <- as.integer(pdb_data$NMR)
pdb_data$Total <- as.integer(pdb_data$Total)
head(pdb_data)
```

```{r}
percent_xray <- sum(pdb_data$X.ray, pdb_data$EM, na.rm = TRUE) / sum(pdb_data$Total) * 100
percent_xray
```

93% of structures in the PDB are solved by X-Ray and Electron Microscopy.

**Q2:** What proportion of structures in the PDB are protein?

```{r}
sum(pdb_data$Total[1], pdb_data$Total[2], pdb_data$Total[3]) / sum(pdb_data$Total)
```

The proportion of structures in the PDB are protein is 0.98.

**Q3:** Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

There are 2,067 HIV-1 protease structures in the current PDB.

## 2. Visualizing the HIV-1 protease structure

**Q4:** Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

In this structure, we see only one atom per water molecule due to the PDB format. As a way to conserve space and reduce the size of PDB files, water molecules are only represented by one atom.

**Q5:** There is a critical "conserved" water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?

HOH 308

**Q6:** Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend *"Ball & Stick"* for these side-chains). Add this figure to your Quarto document.

## 3. Introduction to Bio3D in R

```{r}
library(bio3d)

pdb <- read.pdb("1HSG")
```

```{r}
pdb
```

```{r}

```

**Q7:** How many amino acids residues are there in this pdb object?

198

**Q8:** Name one of the two non-protein residues.

HOH

**Q9.** How many protein chains are in this structure?

2

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

### Predicting functional motions of a single structure

```{r}
adk <- read.pdb("6s36")
```

```{r}
adk
```

```{r}
# Perform flexibility prediction
m <- nma(adk)
```

```{r}
plot(m)
```

```{r}
mktrj(m, file = "adk_m7.pdb")
```

## 4. Comparative structure analysis of Adenylate Kinase

**Q10:** Which of the packages above is found only on BioConductor and not CRAN?

msa

**Q11:** Which of the above packages is not found on BioConductor or CRAN?

bio3d.view

**Q12:** True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket.

True

### Search and retrieve ADK structures

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
```

```{r}
aa
```

**Q13:** How many amino acids are in this sequence, i.e. how long is this sequence?

214

```{r}
# Blast of hmmer search
b <- blast.pdb(aa)
```

```{r}
# Plot a summary of search results
hits <- plot(b)
```

```{r}
# List out some 'top hits'
head(hits$pdb.id)
```

```{r}
# Download related PDB files
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
```

### Align and superpose structures

```{r}
# Align related PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile = "msa")
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
dev.new(width = 10, height = 8)
plot(pdbs, labels = ids)
```

### Annotate collected PDB structures

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

```{r}
anno
```

### Principal Component Analysis

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k = 3)

plot(pc.xray, 1:2, col = "grey50", bg = grps.rd, pch = 21, cex = 1)
```
